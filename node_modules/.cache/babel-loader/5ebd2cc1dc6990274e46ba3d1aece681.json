{"ast":null,"code":"var _jsxFileName = \"/Users/midhunamanchi/Developers/Wallmart_reactJs/wallmart_react/src/components/settings/settings.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Nav from \"../Nav/nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Settings(props) {\n  _s();\n\n  const stgmsg = 'This is the \"Settings\" Page';\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n\n  const handleClick = e => {\n    setFirstname(e.target.value);\n    setLastname(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: stgmsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"FirstName :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"firstname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"LastName :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Settings, \"eZw0d6S0pFyzML6uaGeY+QD48Xk=\");\n\n_c = Settings;\n\nconst useFormInput = (fieldName, initialValue, setError) => {\n  _s2();\n\n  const [value, setValue] = useState({\n    \"fieldName\": fieldName,\n    \"value\": initialValue,\n    \"valid\": false,\n    \"err_msg\": \"\"\n  });\n\n  const handleChange = e => {\n    console.log(value.fieldName + ' value has changed.'); // validate the data for accuracy\n\n    var new_valid = '';\n    var new_err_msg = '';\n\n    if (e.target.value == '') {\n      new_valid = false;\n      new_err_msg = '** ' + value.fieldName + ' cannot be blank.';\n    } else {\n      if (value.fieldName.toUpperCase() == 'PASSWORD') {\n        if (e.target.value.length < 6) {\n          new_valid = false;\n          new_err_msg = '** ' + value.fieldName + ' must be alteast 6 characters long.';\n        } else {\n          new_valid = true;\n          new_err_msg = '';\n        }\n      } else if (value.fieldName.toUpperCase() == 'E-MAIL ADDRESS') {\n        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+$/.test(e.target.value)) {\n          new_valid = true;\n          new_err_msg = '';\n        } else {\n          new_valid = false;\n          new_err_msg = '** Please enter a valid ' + value.fieldName + '.';\n        }\n      } else {\n        new_valid = true;\n        new_err_msg = '';\n      }\n    }\n\n    var new_value = {\n      \"fieldName\": value.fieldName,\n      \"value\": e.target.value,\n      \"valid\": new_valid,\n      \"err_msg\": new_err_msg\n    };\n    setValue(new_value);\n    setError(false);\n    console.log(JSON.stringify(new_value));\n  };\n\n  return {\n    value: value.value,\n    valid: value.valid,\n    err_msg: value.err_msg,\n    onChange: handleChange,\n    onBlue: handleChange\n  };\n};\n\n_s2(useFormInput, \"Cz1ltKf7h8DQFWxtVQoFkG6W7dU=\");\n\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/midhunamanchi/Developers/Wallmart_reactJs/wallmart_react/src/components/settings/settings.js"],"names":["React","useState","Nav","Settings","props","stgmsg","firstname","setFirstname","lastname","setLastname","handleClick","e","target","value","useFormInput","fieldName","initialValue","setError","setValue","handleChange","console","log","new_valid","new_err_msg","toUpperCase","length","test","new_value","JSON","stringify","valid","err_msg","onChange","onBlue"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\nimport Nav from \"../Nav/nav\";\n\nfunction Settings(props){\n\n    const stgmsg = 'This is the \"Settings\" Page'\n    const [firstname,setFirstname] = useState('');\n    const [lastname,setLastname] = useState('');\n\n    const handleClick = (e) => {\n        setFirstname(e.target.value);\n        setLastname(e.target.value);\n    }\n\n    return(\n        <div className=\"row\">\n            <Nav/>\n            <main>\n                <p>{stgmsg}</p>\n                <form onSubmit={handleClick(e)}>\n                    <label>\n                        FirstName : \n                    </label>\n                    <input type=\"text\" value=\"firstname\" />\n                    <br/>\n                    <br/>\n                    <label>\n                        LastName : \n                    </label>\n                    <input type=\"text\" value=\"lastname\" />\n                    <br/><br/>\n                    <button type=\"button\">Update</button>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nconst useFormInput = (fieldName, initialValue, setError) => {\n    const [value, setValue] = useState({\"fieldName\":fieldName, \"value\":initialValue, \"valid\":false, \"err_msg\":\"\"});\n  \n    const handleChange = e => {\n      console.log(value.fieldName + ' value has changed.');\n  \n      // validate the data for accuracy\n      var new_valid = ''\n      var new_err_msg = ''\n      if(e.target.value == '')\n      {\n          new_valid = false;\n          new_err_msg = '** ' + value.fieldName + ' cannot be blank.'\n      }\n      else\n      {\n          if(value.fieldName.toUpperCase() == 'PASSWORD')\n          {\n            if(e.target.value.length < 6)\n            {\n              new_valid = false;\n              new_err_msg = '** ' + value.fieldName + ' must be alteast 6 characters long.'\n            }\n            else\n            {\n              new_valid = true;\n              new_err_msg = '';\n            }\n          }\n          else if(value.fieldName.toUpperCase() == 'E-MAIL ADDRESS')\n          {\n            if(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+$/.test(e.target.value))\n            {\n              new_valid = true;\n              new_err_msg = '';\n            }\n            else\n            {\n              new_valid = false;\n              new_err_msg = '** Please enter a valid ' + value.fieldName + '.'\n            }\n          }\n          else\n          {\n            new_valid = true;\n            new_err_msg = '';\n          }\n      }\n  \n  \n      var new_value = {\"fieldName\":value.fieldName, \"value\": e.target.value, \"valid\": new_valid, \"err_msg\": new_err_msg};\n      setValue(new_value);\n      setError(false);\n      console.log(JSON.stringify(new_value));\n    }\n    return {\n      value: value.value,\n      valid: value.valid,\n      err_msg: value.err_msg,\n      onChange: handleChange,\n      onBlue: handleChange\n    }\n}  \n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}